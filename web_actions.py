# ุงูููู: web_actions.py

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# ูุงู ุงูุฏุงูุฉ ุชููุฆ ุงููุชุตูุญ ุญุชู ูุดุชุบู ุนูู ุงูุฑูููู
def setup_selenium_driver():
    """ุชููุฆุฉ ูุชุตูุญ Chrome ููุนูู ุจูุถุน Headless (ุจุฏูู ูุงุฌูุฉ) ุจุงูุฑูููู."""
    
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    # ูููู ุชุญุชุงุฌ ุชุฎูู ุงููุบุฉ ุนุฑุจูุฉ ุญุชู ุงููููุน ูุนุฑุถ ุงูุฎูุงุฑุงุช ุตุญ
    chrome_options.add_argument("--lang=ar") 

    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    return driver

# ุงูุฏุงูุฉ ุงูุฌุฏูุฏุฉ: ุชูููุฐ ุนูููุฉ ุฅุถุงูุฉ ุงูุทูุจ
def perform_add_order(order_details: list, delivery_url: str):
    driver = None
    try:
        # 1. ุชููุฆุฉ ูุชุดุบูู ุงููุชุตูุญ
        driver = setup_selenium_driver()
        driver.get(delivery_url)
        
        # ุงูุงูุชุธุงุฑ ูุญุฏ ูุง ุงูุตูุญุฉ ุชููุชุญ ุจุดูู ูุงูู (30 ุซุงููุฉ ูุญุฏ ุฃูุตู)
        wait = WebDriverWait(driver, 30)

        # ุชูุงุตูู ุงูุทูุจ ุญุณุจ ุงูุชุฑุชูุจ:
        # [0] = ุงูููุน (ูุณูุงู)
        # [1] = ุงูุณุนุฑ (12)
        # [2] = ุงูููุทูุฉ (ุฌูููุฑ)
        # [3] = ุฑูู ุงูุฒุจูู (077...)
        # [4] = ุงูููุช (ูุณู)
        
        item_type = order_details[0].strip() # ูุณูุงู
        price = order_details[1].strip()     # 12
        area_name = order_details[2].strip() # ุฌูููุฑ
        phone_number = order_details[3].strip() # 077...
        time_text = order_details[4].strip() # ูุณู
        
        # **********************************************************************************
        # 2. ููุก ุญููู ุงููุตูุต (ุงูููุนุ ุงูุณุนุฑุ ุงูุฑููุ ุงูููุช)
        # ๐ด ููุงุญุธุฉ: ูุงู ุงูู IDs ูุงูู XPATHS ูู ุชุฎููููุฉ ููุงุฒู ุชุชุนุฏู ุญุณุจ ุงููููุน ุงูุญูููู ูุงูู
        # **********************************************************************************
        
        # ุญูู ููุน ุงูุทูุจ (Type of Order)
        # ๐ด ูุงุฒู ุชุดูู ุงูู ID ุฃู ุงูู Name ุฃู ุงูู XPath ุงูุญูููู ูุฎุงูุฉ ุงูููุน
        wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ููุน ุงูุทูุจ']"))).send_keys(item_type)
        
        # ุญูู ุณุนุฑ ุงูุทูุจ (Price)
        # ๐ด ูุงุฒู ุชุดูู ุงูู ID ุฃู ุงูู Name ุฃู ุงูู XPath ุงูุญูููู ูุฎุงูุฉ ุงูุณุนุฑ
        wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ุณุนุฑ ุงูุทูุจ']"))).send_keys(price)

        # ุญูู ุฑูู ุงูุฒุจูู (Phone Number)
        # ๐ด ูุงุฒู ุชุดูู ุงูู ID ุฃู ุงูู Name ุฃู ุงูู XPath ุงูุญูููู ูุฎุงูุฉ ุงูุฑูู
        wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ุฑูู ุงูุฒุจูู']"))).send_keys(phone_number)
        
        # ุญูู ููุช ุงูุทูุจ (Time)
        # ๐ด ูุงุฒู ุชุดูู ุงูู ID ุฃู ุงูู Name ุฃู ุงูู XPath ุงูุญูููู ูุฎุงูุฉ ุงูููุช
        wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ููุช ุงูุทูุจ']"))).send_keys(time_text)
        
        # **********************************************************************************
        # 3. ุงูุชุนุงูู ูุน ุฎุงูุฉ ุงูุจุญุซ ูุงูุงุฎุชูุงุฑ ููููุทูุฉ (Dropdown/Autocomplete)
        # **********************************************************************************
        
        # ุฃ. ุงูููุฑ ููุชุญ ูุงุฆูุฉ ุงูููุงุทู
        # ๐ด ูุงุฒู ุชุดูู ุงูู ID ุฃู ุงูู XPath ุงูุญูููู ูุฎุงูุฉ ุงูููุทูุฉ (ุนุงุฏุฉ ูููู ุญูู ูุตู ุฃู ุฒุฑ)
        area_input = wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ููุทูุฉ ุงูุฒุจูู']")))
        area_input.click() # ุงูุถุบุท ููุชุญ ูุงุฆูุฉ ุงูุจุญุซ
        
        # ุจ. ูุชุงุจุฉ ุงุณู ุงูููุทูุฉ (ุฌูููุฑ)
        area_input.send_keys(area_name) 

        # ุฌ. ุงูุงูุชุธุงุฑ ูุธููุฑ ุฎูุงุฑ ุงูููุทูุฉ (ุนุงุฏุฉ ูููู ุนูุตุฑ ุจุงููุงุฆูุฉ ูุธูุฑ ุจุนุฏ ุงููุชุงุจุฉ)
        # ๐ด ูุงุฒู ุชุดูู ุงูู XPath ุฃู ุงูู ID ููุนูุตุฑ ุงููู ูุธูุฑ ุจุงููุงุฆูุฉ ุจุนุฏ ุงูุจุญุซ 
        area_option = wait.until(EC.presence_of_element_located((By.XPATH, f"//li[contains(text(), '{area_name}')]")))
        area_option.click() # ุงุฎุชูุงุฑ ุงูููุทูุฉ
        
        # **********************************************************************************
        # 4. ุงูููุฑ ุนูู ุฒุฑ ุงูุฅุถุงูุฉ
        # **********************************************************************************
        
        # ๐ด ูุงุฒู ุชุดูู ุงูู XPath ุฃู ุงูู ID ุงูุญูููู ูุฒุฑ "ุฅุถุงูุฉ ุทูุจูุฉ" ุฃู "ุชุฃููุฏ"
        submit_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'ุฅุถุงูุฉ ุทูุจูุฉ')]")))
        submit_button.click()
        
        # 5. ุงูุงูุชุธุงุฑ ููุญุตูู ุนูู ุฑุณุงูุฉ ุงููุฌุงุญ
        # ๐ด ูุฐุง ุงูุฌุฒุก ุชุฎููููุ ูุงุฒู ูุนุฑู ุดููู ุงููููุน ูุฑุฏ (ุฑุณุงูุฉ ูุฌุงุญ ุฃู ุชุญููู ูุตูุญุฉ ุซุงููุฉ)
        success_message = "โ ุชู ุฅุถุงูุฉ ุงูุทูุจ ุจูุฌุงุญ ูู ุงููููุน." 
        
        # ูููู ูุดูู ุนููุงู ุงูุตูุญุฉ ุงูุฌุฏูุฏุฉ ุฃู ูุจุญุซ ุนู ุฑุณุงูุฉ ุชุฃููุฏ ูุนููุฉ
        
        return success_message

    except Exception as e:
        return f"โ ุตุงุฑ ุฎุทุฃ ุฃุซูุงุก ุฅุฏุฎุงู ุงูุทูุจ: {e}"
        
    finally:
        if driver:
            driver.quit() # ุฅุบูุงู ุงููุชุตูุญ

# ุฏุงูุฉ dummy ูููุญุงูุธุฉ ุนูู ุจููุฉ ุงูููุฏ (ุณูุญุชุงุฌูุง ููุฒุฑ ุงูุซุงูู)
def perform_order_action():
    return "ูุฐู ุงูุฏุงูุฉ ููุฌูุฏุฉ ููุท ููุญูุงุธ ุนูู ุงูุฑุจุท ุจู bot.py. ุณูุณุชุฎุฏู ุฏุงูุฉ perform_add_order."

