# ุงูููู: web_actions.py (ุงูุฅุตุฏุงุฑ ุงูููุงุฆู ูุงููุฏูู ูู CSRF)

import requests
from bs4 import BeautifulSoup
import json
import time

# ูุงููุณ ูุชุญุฏูุฏ ID ุงูููุทูุฉ ุจูุงุกู ุนูู ุงูุงุณู (ุจุงูู ููุง ูู)
AREA_IDS = {
    "ุชูุงุทุน ุฌูุงุจ": "1", "ุงูุงุณูุฏุฉ": "2", "ูุญููุฉ ุงูุณูู": "3", "ุฌุณุฑ ูุญููุฉ": "4", 
    "ุฌูููุฑ": "5", "ุงุจู ูุบูุฑุฉ": "6", "ูุญููุฉ ุทุฑูู ุงููุญุทุฉ": "7", "ูุญููุฉ ุดุงุฑุน ุงูุงูุฏูุณ": "8", 
    "ูุญููุฉ ุตูุญุฉ ุงูุดุท": "9", "ุฌูููุฑ ุญุฒุจุฉ 1": "10", "ุฌูููุฑ ุญุฒุจุฉ .2": "11", "ุจุงุจ ููุฏุงู": "12", 
}

def perform_add_order(order_details: list, delivery_url: str):
    
    # ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ
    item_type = order_details[0].strip()    
    price = order_details[1].strip()        
    area_name = order_details[2].strip()    
    phone_number = order_details[3].strip() 
    time_text = order_details[4].strip()    
    city_id = AREA_IDS.get(area_name, "") 

    session = requests.Session()
    
    try:
        # 1. ุงููุฑุญูุฉ ุงูุฃููู: ุงูุญุตูู ุนูู ุงูุตูุญุฉ ู CSRF Token
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36', 
        }
        
        response_get = session.get(delivery_url, headers=headers)
        soup = BeautifulSoup(response_get.text, 'html.parser')
        
        # ๐ด ุงูุจุญุซ ุนู ุฃู ุญูู ุฅุฏุฎุงู ูุฎูู (input type=hidden) ูู ุงูุตูุญุฉ
        csrf_token_tag = soup.find('input', {'type': 'hidden'})
        
        if not csrf_token_tag:
             # ูู ุญุงู ุนุฏู ูุฌูุฏ ุญูู ูุฎููุ ูุฎูู ุงูุงุณู "_token"
             csrf_token_value = ""
             csrf_token_name = "_token" 
        else:
             csrf_token_value = csrf_token_tag.get('value', "")
             # โฌ๏ธ ุงูุญุตูู ุนูู ุงูุงุณู ุงูุญูููู ููุญูู ุงููุฎูู (ูุซู: 'csrf-token' ุฃู '_token')
             csrf_token_name = csrf_token_tag.get('name', "_token") 
        
        # 2. ุงููุฑุญูุฉ ุงูุซุงููุฉ: ุฅุฑุณุงู ุงูุทูุจ (POST Request)
        
        # ุงูุจูุงูุงุช ุงููู ูุงุฒู ูุฑุณููุง ุงูุจูุช ูููููุน:
        payload = {
            # ๐ด ุงุณุชุฎุฏุงู ุงุณู ุงูุญูู ุงููุณุชุฎุฑุฌ (ุฃู _token ูุชุฎููู)
            csrf_token_name: csrf_token_value,    
            
            # ุงูุญููู ุงูุฃุณุงุณูุฉ
            'order_type': item_type,       
            'price': price,                
            'city_id': city_id,            
            'phone': phone_number,         
            'date_note': time_text,        
            
            # ุงูุญููู ุงูุซุงูููุฉ
            'is_paid': "0",                 
            'phone2': "",                   
            'pic': "",                      
            'note': "",                     
            
            # ุฒุฑ ุงูุฅุถุงูุฉ
            'addnew': 'ุงุถุงูุฉ ุงูุทูุจูุฉ'      
        }
        
        # ุฅุฑุณุงู ุงูุจูุงูุงุช
        response_post = session.post(delivery_url, data=payload, headers=headers)
        
        # ูุญุต ุงูุฑุฏ:
        if response_post.status_code == 200:
            # ๐ด ุงูุชุญูู ุงูุฃููุฏ ูู ุงููุฌุงุญ: ุฅุฐุง ุชู ุงูุชุญููู (Redirect) ุฅูู ุตูุญุฉ ุฃุฎุฑู ุจุนุฏ ุงูุฅุฑุณุงู
            if response_post.url != delivery_url:
                return "โ ุชู ุฅุถุงูุฉ ุงูุทูุจ ุจูุฌุงุญ (ุชู ุฑุตุฏ ุชุญููู ูู ุงูุฑุงุจุท)."

            # ุฅุฐุง ูู ูุชู ุงูุชุญูููุ ูุฐุง ูุนูู ูุดู ุจุงูุฑุบู ูู ุงูุฑุฏ 200
            if "CSRF token mismatch" in response_post.text:
                return f"โ ูุดู: CSRF Token ุบูุฑ ูุทุงุจู. ูุฑุฌู ูุฑุงุฌุนุฉ ุงููุจุฑูุฌ."
            
            # ๐ด ุฅุฐุง ูุงู ุงูุฑุฏ 200 ููุง ููุฌุฏ ุชุญูููุ ููุฌุฏ ุฑุณุงูุฉ ูุฌุงุญุ ููุฐุง ูุดู ุตุงูุช
            elif "location.replace" in response_post.text or "ุชูุช ุงูุนูููุฉ ุจูุฌุงุญ" in response_post.text:
                return f"โ ูุดู ุตุงูุช: ุงููููุน ุฑุฏ ุจุฑุณุงูุฉ ูุฌุงุญ ({response_post.status_code}) ููู ูู ูุชู ุฅูุดุงุก ุงูุทูุจ. ุงูุณุจุจ ุบุงูุจุงู: ุญูู ุจูุงูุงุช ููููุฏ."
            
            else:
                return f"โ ูุดู ุงูุฅุฑุณุงู: ุงูุฑุฏ 200 ููู ูุง ุชูุฌุฏ ุฅุดุงุฑุฉ ูุฌุงุญ ุฃู ุชุญููู. ูุฐุง ูุนูู ูุดู ูู ุงูุชุญูู ูู ุงูุจูุงูุงุช."

        else:
            return f"โ ูุดู ุงูุฅุฑุณุงู. ุญุงูุฉ ุงูุฑุฏ: {response_post.status_code}. "

    except Exception as e:
        return f"โ ุตุงุฑ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุงูุทูุจ: {e}"
